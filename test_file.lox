

//fun outer() {
  //var x = "outside";
  //fun inner() {
   // print x;
  //}
//
 // return inner;
//}

//var closure = outer();
//closure();


//class Scone {
  //topping(first, second) {
   // print "scone with " + first + " and " + second;
  //}
//}

//var scone = Scone();
//scone.topping("berries", "cream");

//print this; // At top level.

//fun notMethod() {
  //print this; // In a function.
//}

//class Nested {
  //method() {
    //fun function() {
     // print this;
    //}

    //function();
  //}
//}

//Nested().method();

//class CoffeeMaker {
  //init(coffee) {
    //this.coffee = coffee;
  //}

  //brew() {
    //print "Enjoy your cup of " + this.coffee;

    // No reusing the grounds!
    //this.coffee = nil;
  //}
//}

//var maker = CoffeeMaker("coffee and chicory");
//maker.coffee = "coffee and chicory";
//maker.brew();

//print "made it!";

class Doughnut {
  cook() {
    print "Dunk in the fryer.";
    this.finish("sprinkles");
  }

  finish(ingredient) {
    print "Finish with " + ingredient;
  }
}

class Cruller < Doughnut {
  finish(ingredient) {
    // No sprinkles, always icing.
    super.finish("icing");
  }
}

var cruller = Cruller();
cruller.cook();
cruller.finish("My stuff!");